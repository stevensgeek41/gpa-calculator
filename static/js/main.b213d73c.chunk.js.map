{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Header","Grade","props","value","onChange","Credits","grade2point","grade","val","Table","width","align","Calculate","l","grades","length","gradeSum","creditSum","i","credits","console","log","toFixed","Courses","state","flag","gradeOnChange","handleGradeChange","bind","creditOnChange","handleCreditChange","deleteOnClick","handleDelete","resetOnClick","handleReset","textOnSubmit","handleTextSubmit","id","e","this","slice","target","setState","preventDefault","concat","splice","className","onSubmit","map","v","key","type","size","onClick","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b213d73c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction Header()\n{\n  return (<h1>Please Input your course information.</h1>);\n}\n\nfunction Grade(props){\n  return (\n      <select value={props.value} onChange={props.onChange}>\n        <option value=\"A+\">A+</option>\n        <option value=\"A\">A</option>\n        <option value=\"A-\">A-</option>\n        <option value=\"B+\">B+</option>\n        <option value=\"B\">B</option>\n        <option value=\"B-\">B-</option>\n        <option value=\"C+\">C+</option>\n        <option value=\"C\">C</option>\n        <option value=\"C-\">C-</option>\n        <option value=\"D+\">D+</option>\n        <option value=\"D\">D</option>\n        <option value=\"F\">F</option>\n       </select>\n  );\n}\n\nfunction Credits(props){\n  return (\n      <select value={props.value} onChange={props.onChange}>\n        <option value={0.00}>0.00</option>\n        <option value={3.00}>3.00</option>\n        <option value={4.00}>4.00</option>\n       </select>\n  );\n}\n\nfunction grade2point(grade){\n  let val = 0.0;\n  switch(grade){\n    case \"A+\": val=4.0; break;\n    case \"A\": val=4.0; break;\n      case \"A-\": val=3.7; break;\n    case \"B+\": val=3.3; break;\n      case \"B\": val=3.0; break;\n      case \"B-\": val=2.7; break;\n    case \"C+\": val=2.3; break;\n      case \"C\": val=2.0; break;\n      case \"C-\": val=1.7; break;\n      case \"D+\": val=1.3; break;\n      case \"D\": val=1.0; break;\n      case \"F\": val=0.0; break;\n      default: val=0.0;break;\n  }\n  return val;\n}\n\nfunction Table()\n{\n  return(\n    <table>\n      <thead>\n        <tr>\n          <td width={175} align=\"center\">Class Title</td>\n          <td>Grade</td>\n          <td>Credits</td>\n        </tr>\n      </thead>\n    </table>\n  );\n}\n\nfunction Calculate(props){\n  const l = props.grades.length;\n  let gradeSum = 0;\n  let creditSum = 0;\n  for(let i = 0; i < l; i++){\n    gradeSum += grade2point(props.grades[i])*props.credits[i];\n    creditSum += 1*props.credits[i];\n    console.log(creditSum);\n  }\n  return(\n    <h3>Current GPA: {(gradeSum/creditSum).toFixed(1)}</h3>\n  )\n  \n}\n\nclass Courses extends React.Component{\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      grades: [\"A\"],\n      credits: [0.00],\n      flag: [0],\n    };\n    this.gradeOnChange = this.handleGradeChange.bind(this);\n    this.creditOnChange = this.handleCreditChange.bind(this);\n    this.deleteOnClick = this.handleDelete.bind(this);\n    this.resetOnClick = this.handleReset.bind(this);\n    this.textOnSubmit = this.handleTextSubmit.bind(this);\n  }\n  \n  handleGradeChange(id,e){\n    const grades = this.state.grades.slice();\n    grades[id] = e.target.value;\n    this.setState({grades: grades});\n  }\n  \n  handleTextSubmit(e){\n    e.preventDefault();\n    \n  }\n  handleReset(e){\n    const grades = [\"A\"];\n    const credits = [0.00];\n    const flag = [0];\n    this.setState({grades: grades, credits: credits, flag: flag});\n  }\n  handleCreditChange(id,e){\n    const credits = this.state.credits.slice();\n    const flag = this.state.flag.slice();\n    const grades = this.state.grades.slice();\n    credits[id] = e.target.value;\n    if(flag[id] === 0){\n      flag[id]=1;\n      this.setState({grades: grades.concat([\"A\"]),credits: credits.concat([0.00]),flag: flag.concat([0])});\n    }else{\n      this.setState({credits: credits});\n    }\n  }\n  \n  handleDelete(id){\n    const credits = this.state.credits.slice();\n    const flag = this.state.flag.slice();\n    const grades = this.state.grades.slice();\n    credits.splice(id,1);\n    flag.splice(id,1);\n    if(id === this.state.flag.length-1){\n      flag[flag.length-1] = 0;\n    }\n    grades.splice(id,1);\n    this.setState({grades: grades, credits: credits, flag: flag});\n  }\n  \n  render(){\n    const grades = this.state.grades.slice();\n    const credits = this.state.credits.slice();\n    return (\n      <div className=\"body\">\n        <Table/>\n      <form onSubmit={this.textOnSubmit}>\n        {grades.map((v,i)=>\n                 <div className={\"course\"+i} key={i}>\n                      {i+1}.<input type=\"text\" size={20}/>\n                  <Grade value={v} onChange={this.gradeOnChange.bind(this,i)}/>\n                  <Credits value={credits[i]} onChange={this.creditOnChange.bind(this,i)}/>\n                  {\n                i > 0 &&\n                 <input type=\"button\" value=\"delete\" onClick={this.deleteOnClick.bind(this,i)}/>\n                  }\n                 </div>\n                  )}\n        </form>\n        <br/>\n        <input type=\"button\" value=\"reset\" onClick={this.resetOnClick}/>\n        <Calculate grades={this.state.grades} credits={this.state.credits}/>\n        </div>\n        );\n  }\n  \n}\n\n\nfunction App(){\n  return(\n    <div className=\"app\">\n      <Header/>\n      <div className=\"course\">\n        <Courses/>\n      </div>\n    </div>\n   \n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}